// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: mapreduce.proto

package mapreduce

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Define Task types
type TaskType int32

const (
	TaskType_MAP    TaskType = 0
	TaskType_REDUCE TaskType = 1
	TaskType_WAIT   TaskType = 2
	TaskType_EXIT   TaskType = 3
)

// Enum value maps for TaskType.
var (
	TaskType_name = map[int32]string{
		0: "MAP",
		1: "REDUCE",
		2: "WAIT",
		3: "EXIT",
	}
	TaskType_value = map[string]int32{
		"MAP":    0,
		"REDUCE": 1,
		"WAIT":   2,
		"EXIT":   3,
	}
)

func (x TaskType) Enum() *TaskType {
	p := new(TaskType)
	*p = x
	return p
}

func (x TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_mapreduce_proto_enumTypes[0].Descriptor()
}

func (TaskType) Type() protoreflect.EnumType {
	return &file_mapreduce_proto_enumTypes[0]
}

func (x TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskType.Descriptor instead.
func (TaskType) EnumDescriptor() ([]byte, []int) {
	return file_mapreduce_proto_rawDescGZIP(), []int{0}
}

// Request sent by a worker to register itself with the master
type WorkerRegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=workerId,proto3" json:"workerId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerRegisterRequest) Reset() {
	*x = WorkerRegisterRequest{}
	mi := &file_mapreduce_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerRegisterRequest) ProtoMessage() {}

func (x *WorkerRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mapreduce_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerRegisterRequest.ProtoReflect.Descriptor instead.
func (*WorkerRegisterRequest) Descriptor() ([]byte, []int) {
	return file_mapreduce_proto_rawDescGZIP(), []int{0}
}

func (x *WorkerRegisterRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

// Response to a worker's registration request
type WorkerRegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerRegisterResponse) Reset() {
	*x = WorkerRegisterResponse{}
	mi := &file_mapreduce_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerRegisterResponse) ProtoMessage() {}

func (x *WorkerRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mapreduce_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerRegisterResponse.ProtoReflect.Descriptor instead.
func (*WorkerRegisterResponse) Descriptor() ([]byte, []int) {
	return file_mapreduce_proto_rawDescGZIP(), []int{1}
}

func (x *WorkerRegisterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request from a worker for a task
type TaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=workerId,proto3" json:"workerId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskRequest) Reset() {
	*x = TaskRequest{}
	mi := &file_mapreduce_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRequest) ProtoMessage() {}

func (x *TaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mapreduce_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRequest.ProtoReflect.Descriptor instead.
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return file_mapreduce_proto_rawDescGZIP(), []int{2}
}

func (x *TaskRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

// Response with a task assignment
type TaskAssignment struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TaskType          TaskType               `protobuf:"varint,1,opt,name=taskType,proto3,enum=mapreduce.TaskType" json:"taskType,omitempty"`
	TaskId            int32                  `protobuf:"varint,2,opt,name=taskId,proto3" json:"taskId,omitempty"`
	InputFile         string                 `protobuf:"bytes,3,opt,name=inputFile,proto3" json:"inputFile,omitempty"`
	IntermediateFiles []string               `protobuf:"bytes,4,rep,name=intermediateFiles,proto3" json:"intermediateFiles,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TaskAssignment) Reset() {
	*x = TaskAssignment{}
	mi := &file_mapreduce_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAssignment) ProtoMessage() {}

func (x *TaskAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_mapreduce_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAssignment.ProtoReflect.Descriptor instead.
func (*TaskAssignment) Descriptor() ([]byte, []int) {
	return file_mapreduce_proto_rawDescGZIP(), []int{3}
}

func (x *TaskAssignment) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_MAP
}

func (x *TaskAssignment) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *TaskAssignment) GetInputFile() string {
	if x != nil {
		return x.InputFile
	}
	return ""
}

func (x *TaskAssignment) GetIntermediateFiles() []string {
	if x != nil {
		return x.IntermediateFiles
	}
	return nil
}

// Worker reports task completion
type TaskResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=workerId,proto3" json:"workerId,omitempty"`
	TaskId        int32                  `protobuf:"varint,2,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	OutputFile    string                 `protobuf:"bytes,4,opt,name=outputFile,proto3" json:"outputFile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	mi := &file_mapreduce_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_mapreduce_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_mapreduce_proto_rawDescGZIP(), []int{4}
}

func (x *TaskResult) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *TaskResult) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *TaskResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TaskResult) GetOutputFile() string {
	if x != nil {
		return x.OutputFile
	}
	return ""
}

var File_mapreduce_proto protoreflect.FileDescriptor

var file_mapreduce_proto_rawDesc = string([]byte{
	0x0a, 0x0f, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x15, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x22, 0x32,
	0x0a, 0x16, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x29, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa5, 0x01,
	0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x2f, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x7a, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x2a, 0x33, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a,
	0x03, 0x4d, 0x41, 0x50, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x44, 0x55, 0x43, 0x45,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x41, 0x49, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04,
	0x45, 0x58, 0x49, 0x54, 0x10, 0x03, 0x32, 0xe5, 0x01, 0x0a, 0x0d, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x2e, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64,
	0x75, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x15, 0x2e, 0x6d, 0x61, 0x70, 0x72, 0x65,
	0x64, 0x75, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x70, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61,
	0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d,
	0x5a, 0x0b, 0x2e, 0x2f, 0x6d, 0x61, 0x70, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_mapreduce_proto_rawDescOnce sync.Once
	file_mapreduce_proto_rawDescData []byte
)

func file_mapreduce_proto_rawDescGZIP() []byte {
	file_mapreduce_proto_rawDescOnce.Do(func() {
		file_mapreduce_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mapreduce_proto_rawDesc), len(file_mapreduce_proto_rawDesc)))
	})
	return file_mapreduce_proto_rawDescData
}

var file_mapreduce_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mapreduce_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_mapreduce_proto_goTypes = []any{
	(TaskType)(0),                  // 0: mapreduce.TaskType
	(*WorkerRegisterRequest)(nil),  // 1: mapreduce.WorkerRegisterRequest
	(*WorkerRegisterResponse)(nil), // 2: mapreduce.WorkerRegisterResponse
	(*TaskRequest)(nil),            // 3: mapreduce.TaskRequest
	(*TaskAssignment)(nil),         // 4: mapreduce.TaskAssignment
	(*TaskResult)(nil),             // 5: mapreduce.TaskResult
	(*emptypb.Empty)(nil),          // 6: google.protobuf.Empty
}
var file_mapreduce_proto_depIdxs = []int32{
	0, // 0: mapreduce.TaskAssignment.taskType:type_name -> mapreduce.TaskType
	3, // 1: mapreduce.MasterService.RequestTask:input_type -> mapreduce.TaskRequest
	5, // 2: mapreduce.MasterService.ReportTask:input_type -> mapreduce.TaskResult
	1, // 3: mapreduce.MasterService.RegisterWorker:input_type -> mapreduce.WorkerRegisterRequest
	4, // 4: mapreduce.MasterService.RequestTask:output_type -> mapreduce.TaskAssignment
	6, // 5: mapreduce.MasterService.ReportTask:output_type -> google.protobuf.Empty
	2, // 6: mapreduce.MasterService.RegisterWorker:output_type -> mapreduce.WorkerRegisterResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_mapreduce_proto_init() }
func file_mapreduce_proto_init() {
	if File_mapreduce_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mapreduce_proto_rawDesc), len(file_mapreduce_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mapreduce_proto_goTypes,
		DependencyIndexes: file_mapreduce_proto_depIdxs,
		EnumInfos:         file_mapreduce_proto_enumTypes,
		MessageInfos:      file_mapreduce_proto_msgTypes,
	}.Build()
	File_mapreduce_proto = out.File
	file_mapreduce_proto_goTypes = nil
	file_mapreduce_proto_depIdxs = nil
}
