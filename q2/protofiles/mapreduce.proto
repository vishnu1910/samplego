syntax = "proto3";

package mr;

option go_package = "github.com/vishnu1910/samplego/q2/protofiles/mrpb";

// Enum for job type (currently supporting word count and inverted index)
enum JobType {
  WORDCOUNT = 0;
  INVERTEDINDEX = 1;
}

// Basic worker identification
message WorkerInfo {
  string worker_id = 1;
}

// Map task assignment message
message MapTask {
  int32 task_id = 1;
  string input_file = 2;
  JobType job_type = 3;
  int32 num_reduce = 4;
}

// Request a map task from the master
message MapTaskRequest {
  WorkerInfo worker = 1;
}

// Response for a map task request
message MapTaskResponse {
  bool assigned = 1;
  MapTask task = 2;
}

// Worker reports completion of a map task
message ReportMapTaskRequest {
  string worker_id = 1;
  int32 task_id = 2;
  // List of intermediate file names produced by the map task; each corresponds to one reduce partition.
  repeated string intermediate_files = 3;
}

message ReportMapTaskResponse {
  string status = 1;
}

// Reduce task assignment message
message ReduceTask {
  int32 task_id = 1;
  int32 reduce_index = 2;
  // List of intermediate file names from all map tasks for this reduce partition.
  repeated string intermediate_files = 3;
  JobType job_type = 4;
}

// Request a reduce task from the master
message ReduceTaskRequest {
  WorkerInfo worker = 1;
}

// Response for a reduce task request
message ReduceTaskResponse {
  bool assigned = 1;
  ReduceTask task = 2;
}

// Worker reports completion of a reduce task
message ReportReduceTaskRequest {
  string worker_id = 1;
  int32 task_id = 2;
  // Final output file produced by the reduce task.
  string output_file = 3;
}

message ReportReduceTaskResponse {
  string status = 1;
}

// The Master service that coordinates MapReduce tasks.
service MasterService {
  rpc RequestMapTask(MapTaskRequest) returns (MapTaskResponse);
  rpc ReportMapTask(ReportMapTaskRequest) returns (ReportMapTaskResponse);
  rpc RequestReduceTask(ReduceTaskRequest) returns (ReduceTaskResponse);
  rpc ReportReduceTask(ReportReduceTaskRequest) returns (ReportReduceTaskResponse);
}

